{"version":3,"sources":["components/Navigation/Navigation.module.scss","components/PostList/PostList.module.scss","pages/UsersPage/UsersPage.module.scss","pages/HomePage/HomePage.module.scss","components/PostItem/PostItem.module.scss","pages/PageNotFound/PageNotFound.module.scss","components/NewUser/NewUser.module.scss","components/AddUserButton/AddUserButton.module.scss","components/Logo/Logo.module.scss","components/Header/Header.module.scss","components/Footer/Footer.module.scss","components/Loader/Loader.module.scss","components/UserList/UserList.module.scss","store/userReducer.ts","store/postReducer.ts","store/index.ts","components/AddUserButton/AddUserButton.tsx","components/Logo/Logo.tsx","components/Navigation/Navigation.tsx","components/Header/Header.tsx","pages/HomePage/HomePage.tsx","components/Footer/Footer.tsx","api/index.ts","api/posts.ts","hooks/useTypedSelector.ts","components/Loader/Loader.tsx","components/NewPost/NewPost.tsx","components/PostItem/PostItem.tsx","components/PostList/PostList.tsx","components/UserItem/UserItem.tsx","components/UserList/UserList.tsx","api/users.ts","pages/UsersPage/UsersPage.tsx","pages/PageNotFound/PageNotFound.tsx","components/NewUser/NewUser.tsx","App.tsx","index.tsx"],"names":["module","exports","defaultState","users","loading","error","FETCH_USERS","FETCH_USERS_SUCCSESS","FETCH_USERS_ERROR","posts","FETCH_POST","FETCH_POST_SUCCSESS","FETCH_POST_ERROR","rootReducer","combineReducers","userReducer","state","action","type","payload","postReducer","store","createStore","applyMiddleware","thunk","AddUserButton","className","classes","newUserBtn","to","Logo","src","alt","logo","Navigation","list","isActive","classNames","link","activeLink","Header","location","useLocation","pathname","header","includes","HomePage","content","title","Footer","footer","BASE_URL","fetchPosts","dispatch","a","axios","get","response","data","useTypedSelector","useSelector","Loader","loader","NewPost","addPost","useState","setTitle","message","setMessage","placeholder","value","onChange","e","target","style","resize","onClick","PostItem","post","removePost","body","icon","id","PostList","React","memo","useDispatch","query","setQuery","selectedUser","useParams","userId","localPosts","localStorage","getItem","JSON","parse","visiblePosts","concat","filter","String","toLowerCase","postId","setItem","stringify","useEffect","map","user","uuidv4","UserItem","name","username","window","scrollTo","top","behavior","UserList","localUsers","visibleUsers","UsersPage","userPage","sidebar","PageNotFound","NewUser","navigate","useNavigate","setName","userName","setUserName","newUser","htmlFor","trim","replace","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0370084.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Navigation_list__Q_Wq4\",\"link\":\"Navigation_link__3OYZD\",\"activeLink\":\"Navigation_activeLink__1sr-a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"PostList_posts__2QmZd\",\"header\":\"PostList_header__1NLSa\",\"title\":\"PostList_title__1WROv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPage\":\"UsersPage_userPage__1v4jg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"HomePage_content__2qI_E\",\"image\":\"HomePage_image__Cx40z\",\"title\":\"HomePage_title__2xHhl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"PostItem_icon__zX6AJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"PageNotFound_content__3SkQ6\",\"title\":\"PageNotFound_title__2iQfw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newUser\":\"NewUser_newUser__bXl_t\",\"content\":\"NewUser_content__2tzbc\",\"opacity\":\"NewUser_opacity__1iRax\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newUserBtn\":\"AddUserButton_newUserBtn__wdAbZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__1ResP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3iXrx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2EZKe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__36ax6\",\"rotate\":\"Loader_rotate__T_Xqn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"UserList_users__a4D9V\"};","import { AnyAction } from 'redux';\nimport { User, UserState } from '../types/User';\n\nconst defaultState: UserState = {\n  users: [],\n  loading: false,\n  error: null,\n};\n\nconst FETCH_USERS = 'FETCH_USERS';\nconst FETCH_USERS_SUCCSESS = 'FETCH_USERS_SUCCSESS';\nconst FETCH_USERS_ERROR = 'FETCH_USERS_ERROR';\n\nexport const userReducer = (state = defaultState, action: AnyAction) => {\n  switch (action.type) {\n    case FETCH_USERS:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case FETCH_USERS_SUCCSESS:\n      return {\n        ...state,\n        loading: false,\n        users: [...action.payload],\n      };\n\n    case FETCH_USERS_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: 'Виникла помилка при завантаженні користовачів.',\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const fetchUsersAction = () => ({ type: FETCH_USERS });\nexport const fetchUsersSuccsessAction = (payload: User[]) => (\n  { type: FETCH_USERS_SUCCSESS, payload }\n);\nexport const fetchUsersErrorAction = () => ({ type: FETCH_USERS_ERROR });\n","import { AnyAction } from 'redux';\nimport { Post, PostState } from '../types/Post';\n\nconst defaultState: PostState = {\n  posts: [],\n  loading: false,\n  error: null,\n};\n\nconst FETCH_POST = 'FETCH_POST';\nconst FETCH_POST_SUCCSESS = 'FETCH_POST_SUCCSESS';\nconst FETCH_POST_ERROR = 'FETCH_POST_ERROR';\n\nexport const postReducer = (state = defaultState, action: AnyAction) => {\n  switch (action.type) {\n    case FETCH_POST:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case FETCH_POST_SUCCSESS:\n      return {\n        ...state,\n        loading: false,\n        posts: action.payload,\n      };\n\n    case FETCH_POST_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: 'Виникла помилка при завантаженні дописів.',\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const fetchPostsAction = () => ({ type: FETCH_POST });\nexport const fetchPostsSuccsessAction = (payload: Post[]) => (\n  { type: FETCH_POST_SUCCSESS, payload }\n);\nexport const fetchPostsErrorAction = () => ({ type: FETCH_POST_ERROR });\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { userReducer } from './userReducer';\nimport { postReducer } from './postReducer';\n\nconst rootReducer = combineReducers({\n  userReducer,\n  postReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport classes from './AddUserButton.module.scss';\n\nexport const AddUserButton: React.FC = () => {\n  return (\n    <div className={classes.newUserBtn}>\n      <NavLink to=\"/users/new-user\">\n        <button\n          type=\"button\"\n          className=\"button is-info\"\n        >\n          Add User\n        </button>\n      </NavLink>\n    </div>\n  );\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport classes from './Logo.module.scss';\n\nexport const Logo:React.FC = () => {\n  return (\n    <NavLink to=\"/\">\n      <img src=\"http://habrastorage.org/files/26e/c52/350/26ec52350e284332a1a4d6d09aedff7e.png\" alt=\"logo\" className={classes.logo} />\n    </NavLink>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport classes from './Navigation.module.scss';\n\nexport const Navigation:React.FC = () => {\n  return (\n    <nav>\n      <ul className={classes.list}>\n        <li>\n          <NavLink\n            className={({ isActive }) => classNames(classes.link, {\n              [classes.activeLink]: isActive,\n            })}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            className={({ isActive }) => classNames(classes.link, {\n              [classes.activeLink]: isActive,\n            })}\n            to=\"/users\"\n          >\n            Users\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { AddUserButton } from '../AddUserButton/AddUserButton';\nimport { Logo } from '../Logo/Logo';\nimport { Navigation } from '../Navigation/Navigation';\n\nimport classes from './Header.module.scss';\n\nexport const Header:React.FC = () => {\n  const location = useLocation().pathname;\n\n  return (\n    <header className={classes.header}>\n      <Logo />\n      <Navigation />\n      {location.includes('/users') && (\n        <AddUserButton />\n      )}\n    </header>\n  );\n};\n","import React from 'react';\nimport { Header } from '../../components/Header/Header';\n\nimport classes from './HomePage.module.scss';\n\nexport const HomePage:React.FC = () => {\n  return (\n    <>\n      <Header />\n      <main>\n        <div className={classes.content}>\n          <h1 className={classes.title}>Hello, everyone!</h1>\n          <img src=\"https://jmd.im/wp-content/uploads/2017/06/blackvi_thumbnail.jpg\" alt=\"#\" />\n        </div>\n      </main>\n    </>\n  );\n};\n","import React from 'react';\nimport { Logo } from '../Logo/Logo';\n\nimport classes from './Footer.module.scss';\n\nexport const Footer:React.FC = () => {\n  return (\n    <footer className={classes.footer}>\n      <Logo />\n    </footer>\n  );\n};\n","export const BASE_URL = 'https://jsonplaceholder.typicode.com';\n","import axios from 'axios';\nimport { Dispatch } from 'react';\nimport { AnyAction } from 'redux';\nimport { fetchPostsAction, fetchPostsErrorAction, fetchPostsSuccsessAction } from '../store/postReducer';\nimport { BASE_URL } from './index';\n\nexport const fetchPosts = () => {\n  return async (dispatch: Dispatch<AnyAction>) => {\n    dispatch(fetchPostsAction());\n\n    try {\n      const response = await axios.get(`${BASE_URL}/posts`);\n\n      dispatch(fetchPostsSuccsessAction(response.data));\n    } catch {\n      dispatch(fetchPostsErrorAction());\n    }\n  };\n};\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { RootState } from '../store';\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from 'react';\n\nimport classes from './Loader.module.scss';\n\nexport const Loader: React.FC = () => (\n  <div className={classes.loader} />\n);\n","import React, { useState } from 'react';\n\ntype Props = {\n  addPost: (title: string, message: string) => void,\n};\n\nexport const NewPost: React.FC<Props> = ({ addPost }) => {\n  const [title, setTitle] = useState('');\n  const [message, setMessage] = useState('');\n\n  return (\n    <article className=\"media\">\n      <div className=\"media-content\">\n        <div className=\"field\">\n          <p className=\"control\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Your Title\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n            />\n          </p>\n        </div>\n        <div className=\"field\">\n          <p className=\"control\">\n            <textarea\n              style={{ resize: 'none' }}\n              className=\"textarea\"\n              placeholder=\"Your Message\"\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n            />\n          </p>\n        </div>\n        <nav className=\"level\">\n          <div className=\"level-left\">\n            <div className=\"level-item\">\n              <button\n                type=\"button\"\n                className=\"button is-info\"\n                onClick={() => {\n                  addPost(title, message);\n                }}\n              >\n                Add Post\n              </button>\n            </div>\n          </div>\n        </nav>\n      </div>\n    </article>\n  );\n};\n","import React from 'react';\nimport { Post } from '../../types/Post';\n\nimport classes from './PostItem.module.scss';\n\ntype Props = {\n  post: Post,\n  removePost: (postId: Post['id']) => void,\n};\n\nexport const PostItem:React.FC<Props> = ({ post, removePost }) => {\n  return (\n    <article className=\"media\">\n      <div className=\"media-content\">\n        <div className=\"content\">\n          <h2>{post.title}</h2>\n          <p>{post.body}</p>\n        </div>\n        <nav className=\"level is-mobile\">\n          <div className=\"level-left\">\n            <p className={classes.icon}>\n              <i className=\"fas fa-heart\" />\n            </p>\n            <p className={classes.icon}>\n              <i className=\"fas fa-reply\" />\n            </p>\n          </div>\n        </nav>\n      </div>\n      <div className=\"media-right\">\n        <button type=\"button\" className=\"delete\" onClick={() => removePost(post.id)}> </button>\n      </div>\n    </article>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport { fetchPosts } from '../../api/posts';\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\nimport { Post } from '../../types/Post';\nimport { Loader } from '../Loader/Loader';\nimport { NewPost } from '../NewPost/NewPost';\nimport { PostItem } from '../PostItem/PostItem';\n\nimport classes from './PostList.module.scss';\n\nexport const PostList:React.FC = React.memo(() => {\n  const dispatch = useDispatch();\n  const [query, setQuery] = useState('');\n  const selectedUser = useParams().userId || 0;\n  const { posts, loading, error } = useTypedSelector(state => state.postReducer);\n\n  let localPosts: Post[] = [];\n\n  if (localStorage.getItem('posts')) {\n    localPosts = JSON.parse(localStorage.getItem('posts') || '');\n  }\n\n  const userPosts = posts.concat(localPosts)\n    .filter((post: Post) => String(post.userId) === selectedUser);\n\n  const visiblePosts = userPosts.filter((post: Post) => (\n    post.title.toLowerCase().includes(query.toLowerCase())\n    || post.body.toLowerCase().includes(query.toLowerCase())\n  ));\n\n  const addPost = (title: string, message: string) => {\n    if (!title || !message) {\n      return;\n    }\n\n    const user = {\n      id: uuidv4(),\n      userId: selectedUser,\n      title,\n      body: message,\n    };\n\n    localStorage.setItem('posts', JSON.stringify([\n      ...localPosts,\n      user,\n    ]));\n\n    dispatch(fetchPosts());\n  };\n\n  const removePost = (postId: Post['id']) => {\n    localStorage.setItem('posts', JSON.stringify([\n      ...localPosts.filter(post => post.id !== postId),\n    ]));\n\n    dispatch(fetchPosts());\n  };\n\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, []);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  if (error) {\n    return <h2 className=\"title\">{error}</h2>;\n  }\n\n  return (\n    <div className={classes.posts}>\n      <div className={classes.header}>\n        <h2 className={classes.title}>Post List</h2>\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"Search..\"\n          value={query}\n          onChange={(e) => {\n            setQuery(e.target.value);\n          }}\n        />\n      </div>\n      {visiblePosts.map((post: Post) => (\n        <PostItem key={post.id} post={post} removePost={removePost} />\n      ))}\n      <NewPost addPost={addPost} />\n    </div>\n  );\n});\n","import React from 'react';\nimport { NavLink, useParams } from 'react-router-dom';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserItem:React.FC<Props> = ({ user }) => {\n  const selectedUser = useParams().userId || 0;\n\n  const toTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img src=\"https://iconape.com/wp-content/files/nb/368023/svg/person-logo-icon-png-svg.png\" alt=\"Person\" />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-4\">{user.name}</p>\n            <p className=\"subtitle is-6\">{`@${user.username}`}</p>\n          </div>\n\n          {+selectedUser === user.id ? (\n            <NavLink to=\"/users\">\n              <button\n                type=\"button\"\n                className=\"button open-post-info is-link\"\n              >\n                <i className=\"far fa-eye-slash\" />\n              </button>\n            </NavLink>\n          ) : (\n            <NavLink to={`/users/${user.id}`}>\n              <button\n                type=\"button\"\n                className=\"button open-post-info\"\n                onClick={toTop}\n              >\n                <i className=\"far fa-eye\" />\n              </button>\n            </NavLink>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { UserItem } from '../UserItem/UserItem';\nimport { fetchUsers } from '../../api/users';\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\nimport { User } from '../../types/User';\n\nimport classes from './UserList.module.scss';\nimport { Loader } from '../Loader/Loader';\n\nexport const UserList:React.FC = React.memo(() => {\n  const dispatch = useDispatch();\n  const [query, setQuery] = useState('');\n  const { users, loading, error } = useTypedSelector(state => state.userReducer);\n\n  let localUsers = [];\n\n  if (localStorage.getItem('users')) {\n    localUsers = JSON.parse(localStorage.getItem('users') || '');\n  }\n\n  const allUsers = [...users].concat(localUsers);\n  const visibleUsers = allUsers.filter((user: User) => (\n    user.name.toLowerCase().includes(query.toLowerCase())\n  ));\n\n  useEffect(() => {\n    dispatch(fetchUsers());\n  }, []);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  if (error) {\n    return <h2 className=\"title\">{error}</h2>;\n  }\n\n  return (\n    <div className={classes.users}>\n      <input\n        className=\"input\"\n        type=\"text\"\n        placeholder=\"Search..\"\n        value={query}\n        onChange={(e) => {\n          setQuery(e.target.value);\n        }}\n      />\n      {visibleUsers.map((user: User) => (\n        <UserItem key={user.id} user={user} />\n      ))}\n    </div>\n  );\n});\n","import axios from 'axios';\nimport { Dispatch } from 'react';\nimport { AnyAction } from 'redux';\nimport { fetchUsersAction, fetchUsersErrorAction, fetchUsersSuccsessAction } from '../store/userReducer';\nimport { BASE_URL } from './index';\n\nexport const fetchUsers = () => {\n  return async (dispatch: Dispatch<AnyAction>) => {\n    dispatch(fetchUsersAction());\n\n    try {\n      const response = await axios.get(`${BASE_URL}/users`);\n\n      dispatch(fetchUsersSuccsessAction(response.data));\n    } catch {\n      dispatch(fetchUsersErrorAction());\n    }\n  };\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Footer } from '../../components/Footer/Footer';\nimport { Header } from '../../components/Header/Header';\nimport { PostList } from '../../components/PostList/PostList';\nimport { UserList } from '../../components/UserList/UserList';\n\nimport classes from './UsersPage.module.scss';\n\nexport const UsersPage:React.FC = () => {\n  const selectedUser = useParams().userId;\n\n  return (\n    <>\n      <Header />\n      <main>\n        <div className={classes.userPage}>\n          <aside className={classes.sidebar}>\n            <UserList />\n          </aside>\n          {selectedUser && (\n            <section className={classes.content}>\n              <PostList />\n            </section>\n          )}\n        </div>\n      </main>\n      <Footer />\n    </>\n  );\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Footer } from '../../components/Footer/Footer';\nimport { Header } from '../../components/Header/Header';\n\nimport classes from './PageNotFound.module.scss';\n\nexport const PageNotFound:React.FC = () => {\n  return (\n    <>\n      <Header />\n      <main>\n        <div className={classes.content}>\n          <h1 className={classes.title}>Page Not Found</h1>\n          <NavLink to=\"/\">\n            <button\n              type=\"button\"\n              className=\"button is-link\"\n            >\n              Go Home\n            </button>\n          </NavLink>\n        </div>\n      </main>\n      <Footer />\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport classes from './NewUser.module.scss';\n\nexport const NewUser: React.FC = () => {\n  const navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [userName, setUserName] = useState('');\n\n  const addUser = () => {\n    if (!name || !userName) {\n      return;\n    }\n\n    const user = {\n      id: uuidv4(),\n      name,\n      username: userName,\n    };\n\n    let users = [];\n\n    if (localStorage.getItem('users')) {\n      users = JSON.parse(localStorage.getItem('users') || '');\n    }\n\n    localStorage.setItem('users', JSON.stringify([\n      ...users,\n      user,\n    ]));\n\n    setName('');\n    setUserName('');\n    navigate('/users');\n  };\n\n  return (\n    <div className={classes.newUser}>\n      <div className={classes.content}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"#\">\n            Name\n            <div className=\"control has-icons-left has-icons-right\">\n              <input\n                className={classNames('input', {\n                  'is-success': name.trim(),\n                  'is-danger': !name.trim(),\n                })}\n                type=\"text\"\n                placeholder=\"Name\"\n                value={name}\n                onChange={(e) => setName(e.target.value.replace(/[^a-z|\\s]/gi, ''))}\n              />\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-user\"></i>\n              </span>\n              <span className=\"icon is-small is-right\">\n                {!name.trim() ? (\n                  <i className=\"fas fa-exclamation-triangle\"></i>\n                ) : (\n                  <i className=\"fas fa-check\" />\n                )}\n              </span>\n            </div>\n            {!name.trim() ? (\n              <p className=\"help is-danger\">This name is invalid</p>\n            ) : (\n              <p className=\"help is-success\">This name is available</p>\n            )}\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"#\">\n            Username\n            <div className=\"control has-icons-left has-icons-right\">\n              <input\n                className={classNames('input', {\n                  'is-success': userName.trim(),\n                  'is-danger': !userName.trim(),\n                })}\n                type=\"text\"\n                placeholder=\"User Name\"\n                value={userName}\n                onChange={(e) => setUserName(e.target.value.replace(/\\W/g, ''))}\n              />\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-user\"></i>\n              </span>\n              <span className=\"icon is-small is-right\">\n                {!userName.trim() ? (\n                  <i className=\"fas fa-exclamation-triangle\"></i>\n                ) : (\n                  <i className=\"fas fa-check\" />\n                )}\n              </span>\n            </div>\n            {!userName.trim() ? (\n              <p className=\"help is-danger\">This username is invalid</p>\n            ) : (\n              <p className=\"help is-success\">This username is available</p>\n            )}\n          </label>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-link\"\n              onClick={addUser}\n            >\n              Submit\n            </button>\n          </div>\n          <div className=\"control\">\n            <NavLink to=\"/users\">\n              <button type=\"button\" className=\"button is-link is-light\">Cancel</button>\n            </NavLink>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './pages/HomePage/HomePage';\nimport { UsersPage } from './pages/UsersPage/UsersPage';\n\nimport 'bulma';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { PageNotFound } from './pages/PageNotFound/PageNotFound';\nimport { NewUser } from './components/NewUser/NewUser';\n\nexport const App: React.FC = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n      <Route path=\"/users\" element={<UsersPage />} />\n      <Route path=\"/users/:userId\" element={<UsersPage />} />\n      <Route path=\"/users/new-user\" element={<NewUser />} />\n      <Route path=\"/*\" element={<PageNotFound />} />\n    </Routes>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}